!function(t,e){void 0!==t.IntersectionObserver&&e.querySelectorAll("#toc").forEach((function(s){const o=new Set,r=new Map,n=Array.from(s.querySelectorAll(".menu-list > li > a"));for(const t of n){const s=t.getAttribute("href").trim().slice(1),o=e.getElementById(s);o&&r.set(o,t)}const i=Array.from(r.keys()),l=new IntersectionObserver((e=>{for(const t of e)t.isIntersecting?o.add(t.target):o.delete(t.target);let s;if(o.size?s=[...o].sort(((t,e)=>t.offsetTop-e.offsetTop))[0]:i.length&&(s=i.filter((e=>e.offsetTop<t.scrollY)).sort(((t,e)=>e.offsetTop-t.offsetTop))[0]),s&&r.has(s)){n.forEach((t=>t.classList.remove("is-active")));const t=r.get(s);t.classList.add("is-active");let e=t.parentElement.parentElement;for(;e.classList.contains("menu-list")&&"li"===e.parentElement.tagName.toLowerCase();)e.parentElement.children[0].classList.add("is-active"),e=e.parentElement.parentElement}}),{threshold:0});for(const t of i)if(l.observe(t),r.has(t)){const e=r.get(t);e.setAttribute("data-href",e.getAttribute("href")),e.setAttribute("href","javascript:;"),e.addEventListener("click",(()=>{"function"==typeof t.scrollIntoView&&t.scrollIntoView({behavior:"smooth"});const s=e.getAttribute("data-href");history.pushState?history.pushState(null,null,s):location.hash=s})),t.style.scrollMargin="1em"}}))}(window,document);
